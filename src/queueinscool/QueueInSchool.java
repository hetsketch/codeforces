package queueinscool;

/**
 * Author: hetsketch
 * Created: 8/26/2016
 */

import java.util.Scanner;

/**
 * На перемене в школьной столовой образовалась очередь из n человек, в которой стоят мальчики и девочки. Изначально
 * ребята встали в таком порядке, в котором они забежали в столовую. Однако через некоторое время мальчикам стало
 * неловко, что они стоят в очереди перед девочками, и они стали каждую секунду пропускать девочек вперед.
 * <p>
 * Опишем процесс более точно. Пусть позиции в очереди последовательно пронумерованы целыми числами от 1 до n, причем
 * тот, кто стоит на позиции номер 1 обслуживается первым. Тогда, если в момент времени x на i-ой позиции стоит мальчик,
 * а на (i + 1)-ой — девочка, то в момент времени x + 1 на i-ой позиции будет находиться девочка, а на (i + 1)-ой — мальчик.
 * Моменты времени заданы в секундах.
 * <p>
 * Вам задано расположение ребят в начальный момент времени, определите, как будет выглядеть очередь через t секунд.
 * <p>
 * Входные данные
 * В первой строке заданы два целых числа n и t (1 ≤ n, t ≤ 50), обозначающие количество ребят в очереди и время, спустя
 * которое требуется определить, как будет выглядеть очередь.
 * <p>
 * В следующей строке задана строка s, обозначающая начальную расстановку школьников. Если на i-ой позиции в очереди
 * стоит мальчик, то i-ый символ строки s равен «B», иначе i-ый символ равен «G».
 * <p>
 * Выходные данные
 * Выведите строку a, обозначающую расположение ребят в очереди спустя t секунд. Если на i-ой позиции через заданное
 * время будет стоять мальчик, то i-ый символ a должен быть равен «B», иначе он должен быть равен «G».
 */
public class QueueInSchool {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        sc.nextInt();
        int t = sc.nextInt();
        char[] queue = sc.next().toCharArray();
        while (t > 0) {
            for (int i = queue.length - 1; i > 0; i--) {
                if (queue[i] > queue[i - 1]) {
                    char tmp = queue[i];
                    queue[i] = queue[i - 1];
                    queue[i - 1] = tmp;
                    i--;
                }
            }
            t--;
        }
        System.out.println(String.valueOf(queue));
    }
}
