package beautifulmatrix;

/**
 * Author: hetsketch
 * Created: 8/24/2016
 */

import java.util.Scanner;

/**
 * Перед Вами матрица размера 5 × 5, состоящая из 24-x нулей и единственной единицы. Строки матрицы пронумеруем
 * числами от 1 до 5 сверху вниз, столбцы матрицы пронумеруем числами от 1 до 5 слева направо. За один ход разрешается
 * применить к матрице одно из двух следующих преобразований:
 * <p>
 * Поменять местами две соседние строки матрицы, то есть строки с номерами i и i + 1 для некоторого целого i (1 ≤ i < 5).
 * Поменять местами два соседних столбца матрицы, то есть столбцы с номерами j и j + 1 для некоторого целого j (1 ≤ j < 5).
 * Вы считаете, что матрица будет выглядеть красиво, если единственная единица этой матрицы будет находиться в ее
 * центре (в клетке, которая находится на пересечении третьей строки и третьего столбца). Посчитайте, какое
 * минимальное количество ходов потребуется, чтобы сделать матрицу красивой.
 * <p>
 * Входные данные
 * Входные данные состоят из пяти строк, в каждой из которых записаны пять целых чисел: j-ое число в i-ой строке
 * входных данных обозначает элемент матрицы, стоящий на пересечении i-ой строки и j-ого столбца. Гарантируется,
 * что матрица состоит из 24-x нулей и единственной единицы.
 * <p>
 * Выходные данные
 * Выведите единственное целое число — минимальное количество действий, которое требуется, чтобы сделать матрицу
 * красивой.
 */
public class BeautifulMatrix {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        //firstly we should find indexes where '1' element holds
        //than we abs subtract it with 3(middle indexes) and summarize
        for (int i = 1; i <= 5; i++) {
            for(int j = 1; j <= 5; j++){
                if (sc.nextInt() == 1){
                    System.out.println(Math.abs(i-3) + Math.abs(j-3));
                    System.exit(0);
                }
            }
        }
    }
}
