package stonesontable;

import java.util.Scanner;

/**
 * Author: hetsketch
 * Created: 8/16/16
 */

/**
 * На столе в ряд выложены n камней, каждый из которых может быть красного, зеленого или синего цвета.
 * Посчитайте, какое минимальное количество камней нужно убрать со стола, чтобы любые два соседних камня имели
 * разные цвета. Камни в ряду считаются соседними, если между ними нет других камней.
 * <p>
 * Входные данные
 * В первой строке задано целое число n (1 ≤ n ≤ 50) — количество камней на столе.
 * <p>
 * В следующей строке задана строка s, обозначающая цвета камней. Будем считать, что камни в ряду пронумерованы целыми
 * числами от 1 до n слева направо. Тогда i-ый символ s равен «R», если i-ый камень красного цвета,
 * «G» — если он зеленого цвета, и «B» — если он синего цвета.
 * <p>
 * Выходные данные
 * Выведите единственное целое число — ответ на задачу.
 */
public class StonesOnTable {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        char[] stones = sc.next().toCharArray();
        int count = 0;
        for (int i = 0; i < n - 1; i++) {
            if (stones[i + 1] == stones[i]) {
                count++;
            }
        }
        System.out.println(count);
    }

}
